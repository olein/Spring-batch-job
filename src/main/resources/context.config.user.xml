<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:batch="http://www.springframework.org/schema/batch" xmlns:task="http://www.springframework.org/schema/task"
       xmlns:file="http://www.springframework.org/schema/integration/file"	
       xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans	
	http://www.springframework.org/schema/beans/spring-beans.xsd 	
	http://www.springframework.org/schema/integration/file 
	http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/batch 
    http://www.springframework.org/schema/batch/spring-batch.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd 	
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task.xsd
    http://www.springframework.org/schema/jdbc 
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">   
	
	
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/rev_eng?zeroDateTimeBehavior=convertToNull" />
        <property name="username" value="root" />
        <property name="password" value="" />
    </bean>
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses">
            <list>
                <value>com.spring.batch.User</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>
    
    <!-- Transaction Manager Declaration -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <!--    <bean id="transactionManager"
    class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />-->
    
    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="databaseType" value="mysql" />
    </bean>
    
    <bean id="jobLauncher"
          class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>
  
    <bean id="user" class="com.spring.batch.User" scope="prototype"/>
  
    <bean id="userDAO" class="com.spring.batch.UserDAO">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <!-- User Service Declaration -->
    <bean id="userService" class="com.spring.batch.UserService">
        <property name="userDAO" ref="userDAO" />
    </bean>	
	
    <!-- Read data from the csv file-->
    <bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="user.csv"></property>
        <property name="linesToSkip" value="1"></property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="name,password"></property>
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="user"></property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
    
    <!-- Read data from another csv file-->
    <bean id="itemReader2" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="user2.csv"></property>
        <property name="linesToSkip" value="1"></property>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="name,password"></property>
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="user"></property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
    
    <!--    custom reader-->
    <bean id="listReader" class="com.spring.batch.ListReader" >       
    </bean>
    
    <!--    processor-->
    <bean id="itemProcessor" class="com.spring.batch.TestProcessor" />
	
    <!-- Write data into a database table named: user -->
    <bean id="itemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"></property>
        <property name="sql">
            <value>
               <![CDATA[insert into user(name,password) values (:name, :password)]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>    
    
    <!-- Write data into a database table named: user -->
    <bean id="itemWriter2" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"></property>
        <property name="sql">
            <value>
               <![CDATA[insert into user(name,password) values (:name, :password)]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>
    
    <!--    write data using hibernate-->
    <!--    <bean id="itemWriter" class="com.spring.batch.TestWriter" >
        <property name="userService" ref="userService"/>
    </bean>     -->
   
    <!--  This is to make use of the spring provided test launcher -->
    <bean class="org.springframework.batch.test.JobLauncherTestUtils"/>
    
    <bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>
    
    <!--    run a single job-->
    <!--    <job id="batchJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="batchStep">
            <tasklet allow-start-if-complete="true" task-executor="taskExecutor">
                <chunk reader="itemReader" processor="itemProcessor" writer="itemWriter" commit-interval="5"></chunk>
            </tasklet>
        </step>
    </job> -->
    
    <!--    parallel job execution-->
    <!--    <job id="batchJob" xmlns="http://www.springframework.org/schema/batch">
        <split id="splitFlow1" task-executor="taskExecutor">
            <flow>
                <step id="batchStep">
                    <tasklet allow-start-if-complete="true" task-executor="taskExecutor">
                        <chunk reader="itemReader" processor="itemProcessor" writer="itemWriter" commit-interval="1"></chunk>
                    </tasklet>
                </step>                
            </flow>
            <flow>
                <step id="batchStep2">
                    <tasklet allow-start-if-complete="true" task-executor="taskExecutor">
                        <chunk reader="itemReader2" processor="itemProcessor" writer="itemWriter2" commit-interval="1"></chunk>
                    </tasklet>
                </step>
            </flow>
        </split>        
    </job>  -->
    
    <!--    write data using custom reader-->
    <job id="batchJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="batchStep">
            <tasklet>
                <chunk reader="listReader" processor="itemProcessor" writer="itemWriter" commit-interval="4"></chunk>
            </tasklet>
        </step>
    </job>
  
    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="org/springframework/batch/core/schema-drop-mysql.sql" />
        <jdbc:script location="org/springframework/batch/core/schema-mysql.sql" />
    </jdbc:initialize-database>	
    
</beans>	
